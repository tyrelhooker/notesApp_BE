{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportanceOf","label","important","className","content","onClick","axios","get","then","response","data","newObject","post","id","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","useEffect","noteService","initNotes","find","n","console","log","changedNote","returnedNote","map","onSubmit","event","preventDefault","noteObject","date","Date","Math","random","concat","value","onChange","target","type","i","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAgBeA,EAdF,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,mBAEdC,EAAQF,EAAKG,UAAY,qBAAuB,iBAEtD,OACE,wBAAIC,UAAU,QACXJ,EAAKK,QACN,4BAAQD,UAAU,aAAaE,QAASL,GACrCC,K,gBCWM,EAlBA,WAEb,OADgBK,IAAMC,IAHR,cAICC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAgB5B,EAXA,SAAAC,GAEb,OADgBL,IAAMM,KAVR,aAUsBD,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAS5B,EANA,SAACG,EAAIF,GAGlB,OAFgBL,IAAMQ,IAAN,UAfF,aAeE,YAAwBD,GAAMF,GAE/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SC8F5BK,G,MA1GH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,KAKhBC,qBAAU,WACRC,IAEGhB,MAAK,SAAAiB,GAAS,OAAIP,EAASO,QAC7B,IAEH,IAIMzB,EAAqB,SAAAa,GACzB,IAAMd,EAAOkB,EAAMS,MAAK,SAAAC,GAAC,OAAIA,EAAEd,KAAOA,KACtCe,QAAQC,IAAI9B,GACZ,IAAM+B,EAAW,2BAAQ/B,GAAR,IAAcG,WAAYH,EAAKG,YAChD0B,QAAQC,IAAIC,GAEZN,EACUX,EAAIiB,GACXtB,MAAK,SAAAuB,GACJb,EAASD,EAAMe,KAAI,SAAAjC,GAAI,OACrBA,EAAKc,KAAOA,EACVd,EACAgC,UA8BV,OACE,yBAAK5B,UAAU,OACb,qCACA,0BAAMA,UAAU,WAAW8B,SA3Bf,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBhC,QAASe,EACTkB,KAAM,IAAIC,KACVpC,UAAWqC,KAAKC,SAAW,IAG7BhB,EACUY,GACP5B,MAAK,SAAAuB,GACJH,QAAQC,IAAI,gBAAiBE,GAC7Bb,EAASD,EAAMwB,OAAOV,IACtBX,EAAW,SAeX,2BACEjB,UAAU,WACVuC,MAAOvB,EACPwB,SAZiB,SAACT,GACxBN,QAAQC,IAAIK,EAAMU,OAAOF,OACzBtB,EAAWc,EAAMU,OAAOF,UAYpB,4BAAQvC,UAAU,cAAc0C,KAAK,UAArC,SAEF,6BACE,4BAAQ1C,UAAU,kBAAkBE,QAAS,kBAAMiB,GAAYD,KAA/D,QACSA,EAAU,YAAc,QAIlCA,EAEG,wBAAIlB,UAAU,SACXc,EAAMe,KAAI,SAACjC,EAAM+C,GAAP,OACT,kBAAC,EAAD,CACEC,IAAKD,EACL3C,UAAU,OACVJ,KAAMA,EACNC,mBAAoB,kBAAMA,EAAmBD,EAAKc,WAKxD,wBAAIV,UAAU,SACXc,EAAMe,KAAI,SAACjC,EAAM+C,GAAP,OACT/C,EAAKG,UAED,kBAAC,EAAD,CACE6C,IAAKD,EACL3C,UAAU,OACVJ,KAAMA,EACNC,mBAAoB,kBAAMA,EAAmBD,EAAKc,OAGpD,UCnGlBmC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.d1d49506.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportanceOf }) => {\n\n  const label = note.important ? 'make not important' : 'make important';\n\n  return (\n    <li className=\"note\">\n      {note.content}\n      <button className=\"noteButton\" onClick={toggleImportanceOf}>\n        {label}\n      </button>\n    </li>\n  )\n}\n\nexport default Note;","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n}\n\n//TODO: add a get route to filter out all true/false values?\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  // return request.then(response => console.log('backend', response.data))\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update };","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport noteService from './services/notes';\nimport './App.css';\n\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initNotes => setNotes(initNotes))\n  }, [])\n\n  const toggleShowAll = () => {\n\n  }\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id);\n    console.log(note);\n    const changedNote = { ...note, important: !note.important };\n    console.log(changedNote);\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => \n          note.id !== id \n          ? note \n          : returnedNote \n        ))\n      })\n  }\n\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date(),\n      important: Math.random() > 0.5,\n    }\n\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        console.log(\"returnedNote:\", returnedNote);\n        setNotes(notes.concat(returnedNote))\n        setNewNote('');\n      })\n\n  }\n\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  return (\n    <div className='App'>\n      <h1>Notes</h1>\n      <form className=\"noteForm\" onSubmit={addNote}>\n        <input \n          className=\"inputBox\"\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button className=\"inputButton\" type=\"submit\">save</button>\n      </form>   \n      <div>\n        <button className=\"importantToggle\" onClick={() => setShowAll(!showAll)}>\n          show { showAll ? 'important' : 'all' }\n        </button>\n      </div>\n\n      {showAll\n        ?\n          <ul className=\"notes\">\n            {notes.map((note, i) => \n              <Note \n                key={i} \n                className='note'\n                note={note}\n                toggleImportanceOf={() => toggleImportanceOf(note.id)}\n              />\n            )}\n          </ul>\n        : \n          <ul className=\"notes\">\n            {notes.map((note, i) => \n              note.important \n                ?\n                  <Note \n                    key={i} \n                    className='note'\n                    note={note}\n                    toggleImportanceOf={() => toggleImportanceOf(note.id)}\n                  />\n                : \n                  \"\"\n            )}\n          </ul>\n      }\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}